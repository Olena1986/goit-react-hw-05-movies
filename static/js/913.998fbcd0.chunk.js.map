{"version":3,"file":"static/js/913.998fbcd0.chunk.js","mappings":"qOAOaA,EAAc,CACvBC,W,OANeC,GAAAA,IAAH,8C,SCwDhB,EAnDqB,WACnB,OAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAgCJ,EAAAA,EAAAA,WAAS,GAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAmBMC,EAAkC,IAAlBJ,EAAOK,QAAgBH,EAE7C,OACE,4BACA,UAACR,EAAYC,WAAb,YACI,kBACEW,KAAK,OACLC,MAAOT,EACPU,SAxBkB,SAACC,GACzBV,EAAcU,EAAMC,OAAOH,MAC5B,EAuBOI,YAAY,qBAEd,mBAAQC,QAvBO,WACnBC,EAAAA,EAAAA,IAAA,2DAPa,mCAOb,kBAC2Ef,IACxEgB,MAAK,SAACC,GACLd,EAAUc,EAASC,KAAKC,SACxBd,GAAY,EACb,IACAe,OAAM,SAACC,GACNC,QAAQC,IAAIF,EACb,GACJ,EAaK,SAA+B,cAGhCnB,EAAOK,OAAS,GACf,wBACGL,EAAOsB,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADL,MAOdrB,IAAiB,uBAAG,uBAI3B,C","sources":["Pages/SearchMovies/SearchMovies.styled.js","Pages/SearchMovies/SearchMovies.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nconst SearchWrap = styled.div`\nmargin-top: 10px;\n\n`\n\nexport const SearchStyle = {\n    SearchWrap\n\n}","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\nimport { SearchStyle } from './SearchMovies.styled';\n\n\nconst SearchMovies = () => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searched, setSearched] = useState(false);\n  const apiKey = '9477f76437eb927cec9a7f94dd098501';\n\n  const handleInputChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSearch = () => {\n    axios\n      .get(`http://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${searchTerm}`)\n      .then((response) => {\n        setMovies(response.data.results);\n        setSearched(true);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const noMoviesFound = movies.length === 0 && searched;\n\n  return (\n    <div>\n    <SearchStyle.SearchWrap>\n        <input\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleInputChange}\n          placeholder=\"Enter a keyword\"\n        />\n        <button onClick={handleSearch}>Search</button>\n    </SearchStyle.SearchWrap>\n\n      {movies.length > 0 ? (\n        <ul>\n          {movies.map((movie) => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        noMoviesFound && <p>No movies found.</p>\n      )}\n    </div>\n  );\n};\n\nexport default SearchMovies;\n\n\n\n\nSearchMovies.propTypes = {\n  movieId: PropTypes.string,\n};\n"],"names":["SearchStyle","SearchWrap","styled","useState","searchTerm","setSearchTerm","movies","setMovies","searched","setSearched","noMoviesFound","length","type","value","onChange","event","target","placeholder","onClick","axios","then","response","data","results","catch","error","console","log","map","movie","to","id","title"],"sourceRoot":""}