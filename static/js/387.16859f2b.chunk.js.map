{"version":3,"file":"static/js/387.16859f2b.chunk.js","mappings":"sRAEMA,EAAcC,EAAAA,GAAAA,IAAH,6CAIXC,EAAWD,EAAAA,GAAAA,GAAH,iEAKRE,EAAWF,EAAAA,GAAAA,GAAH,uEAMRG,EAAaH,EAAAA,GAAAA,IAAH,qFAOVI,EAAmBJ,EAAAA,GAAAA,IAAH,qFAeTK,EAAY,CACrBN,YAAAA,EACAE,SAAAA,EACAC,SAAAA,EACAC,WAAAA,EACAG,UAbcN,EAAAA,GAAAA,EAAH,8CAcXO,UAVcP,EAAAA,GAAAA,EAAH,+CAWXI,iBAAAA,G,SCQJ,EAjDa,WACX,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,sGAEC,mCACTC,EAHQ,6CAGoCP,EAHpC,4BAEC,oCAFD,SAKSQ,EAAAA,EAAAA,IAAUD,GALnB,OAKRE,EALQ,OAMdL,EAAQK,EAASC,KAAKP,MANR,gDAQdQ,QAAQC,IAAR,MARc,yDAAH,qDAYfN,GACD,GAAE,CAACN,KAGF,SAACH,EAAUN,YAAX,UACGY,EAAKU,OAAS,GACb,SAAChB,EAAUJ,SAAX,UACGU,EAAKW,KAAI,SAACC,GAAD,OACR,UAAClB,EAAUH,SAAX,WACGqB,EAAMC,cACL,SAACnB,EAAUF,WAAX,CACEsB,IAAG,6CAAwCF,EAAMC,cACjDE,IAAKH,EAAMI,QAGb,SAACtB,EAAUD,iBAAX,CACEqB,IAAI,wBACJC,IAAI,iBAGR,SAACrB,EAAUC,UAAX,UAAsBiB,EAAMI,QAC5B,UAACtB,EAAUE,UAAX,WAAqB,cAAYgB,EAAMK,eAbhBL,EAAMM,GADvB,OAmBZ,uBAAG,+CAIV,C,sBCpDD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"styled-components\";\n\nconst CastWrapper = styled.div`\n  margin-top: 2rem;\n`;\n\nconst CastList = styled.ul`\n  list-style-type: none;\n  padding: 0;\n`;\n\nconst CastItem = styled.li`\n  display: flex;\n  flex-direction:column;\n \n`;\n\nconst ActorImage = styled.img`\n  width: 100px;\n  height: 150px;\n  object-fit: cover;\n  \n`;\n\nconst PlaceholderImage = styled.img`\n  width: 100px;\n  height: 150px;\n  object-fit: cover;\n  \n`;\n\nconst ActorName = styled.p`\n  font-weight: bold;\n`;\n\nconst ActorRole = styled.p`\n  margin-top: 0.5rem;\n`;\n\nexport const CastStyle = {\n    CastWrapper,\n    CastList,\n    CastItem,\n    ActorImage,\n    ActorName,\n    ActorRole,\n    PlaceholderImage\n}","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { CastStyle } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const apiKey = '9477f76437eb927cec9a7f94dd098501';\n        const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${apiKey}`;\n\n        const response = await axios.get(url);\n        setCast(response.data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <CastStyle.CastWrapper>\n      {cast.length > 0 ? (\n        <CastStyle.CastList>\n          {cast.map((actor) => (\n            <CastStyle.CastItem key={actor.id}>\n              {actor.profile_path ? (\n                <CastStyle.ActorImage\n                  src={`https://image.tmdb.org/t/p/original${actor.profile_path}`}\n                  alt={actor.name}\n                />\n              ) : (\n                <CastStyle.PlaceholderImage\n                  src=\"placeholder-image.jpg\"\n                  alt=\"Placeholder\"\n                />\n              )}\n              <CastStyle.ActorName>{actor.name}</CastStyle.ActorName>\n              <CastStyle.ActorRole>Character: {actor.character}</CastStyle.ActorRole>\n            </CastStyle.CastItem>\n          ))}\n        </CastStyle.CastList>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </CastStyle.CastWrapper>\n  );\n};\n\nexport default Cast;\n\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["CastWrapper","styled","CastList","CastItem","ActorImage","PlaceholderImage","CastStyle","ActorName","ActorRole","movieId","useParams","useState","cast","setCast","useEffect","fetchCast","url","axios","response","data","console","log","length","map","actor","profile_path","src","alt","name","character","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}