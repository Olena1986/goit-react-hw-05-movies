{"version":3,"file":"static/js/780.e7a40d18.chunk.js","mappings":"8RAGMA,EAAwBC,EAAAA,GAAAA,IAAH,sEAKrBC,EAAaD,EAAAA,GAAAA,IAAH,yCAIVE,EAAYF,EAAAA,GAAAA,IAAH,8CAITG,EAAaH,EAAAA,GAAAA,GAAH,0CAGVI,EAAeJ,EAAAA,GAAAA,IAAH,mMAOZK,EAAgBL,EAAAA,GAAAA,EAAH,2CAYNM,EAAmB,CAC5BP,sBAAAA,EACAE,WAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAC,aAAAA,EACAG,YAfeP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sIAgBZK,cAAAA,G,SCkBJ,EAzDqB,WACnB,IAAQI,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,MAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,sGAEP,mCACTC,EAHgB,6CAG4BT,EAH5B,oBAEP,oCAFO,SAKCU,EAAAA,EAAAA,IAAUD,GALX,OAKhBE,EALgB,OAMtBP,EAAgBO,EAASC,MANH,gDAQtBC,QAAQC,IAAR,MARsB,yDAAH,qDAYvBN,GACD,GAAE,CAACR,IAECG,GAKJ,iCAEK,mBAAQY,KAAK,SAASC,QAAS,kBAAMX,EAAS,IAAf,EAA/B,SAAoD,aAGtD,UAACR,EAAiBP,sBAAlB,YACE,SAACO,EAAiBL,WAAlB,CAA6ByB,IAAG,0CAAqCd,EAAae,aAAeC,IAAKhB,EAAaiB,SACrH,UAACvB,EAAiBJ,UAAlB,YACI,SAACI,EAAiBH,WAAlB,UAA8BS,EAAaiB,SAC3C,yBAAG,eAAajB,EAAakB,aAAa,QAC1C,wBAAI,cACJ,uBAAIlB,EAAamB,YACjB,wBAAI,YACJ,wBACGnB,EAAaoB,OAAOC,KAAI,SAACC,GAAD,OACvB,wBAAoBA,EAAMC,MAAjBD,EAAME,GADQ,aAM9B,UAAC9B,EAAiBF,aAAlB,YACG,SAACE,EAAiBD,cAAlB,UAAgC,4BAChC,SAACC,EAAiBC,WAAlB,CAA6B8B,GAAG,OAAhC,SAAuC,UACvC,SAAC/B,EAAiBC,WAAlB,CAA6B8B,GAAG,UAAhC,SAA0C,gBAE5C,SAAC,KAAD,QA7BG,yBAAK,cAiCf,C,sBC7DD,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["Pages/MovieDetails/MovieDetail.styled.js","Pages/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst MovieDetailsContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n`\n\nconst MovieImage = styled.img`\n  width: 250px;\n`;\n\nconst MovieInfo = styled.div`\n  margin-left: 20px;\n`;\n\nconst MovieTitle = styled.h1`\n  margin-top: 0;\n`;\nconst MovieAdition = styled.div`\ndisplay:flex;\nflex-direction: column;\nbox-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n`\nconst StyleSubtitle = styled.p`\nfont-weight:bold;\n`\nconst StyledLink = styled(Link)`\n  margin-bottom: 10px;\n  color: #333;\n  transition: color 0.3s ease;\n\n  &:hover {\n    color: blue;\n  }\n`;\nexport const MovieDetailStyle = {\n    MovieDetailsContainer,\n    MovieImage,\n    MovieInfo,\n    MovieTitle,\n    MovieAdition,\n    StyledLink,\n    StyleSubtitle\n\n}","import React, { useEffect, useState } from 'react';\nimport { Outlet, useNavigate, useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { MovieDetailStyle } from './MovieDetail.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState(null);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const apiKey = '9477f76437eb927cec9a7f94dd098501';\n        const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${apiKey}`;\n\n        const response = await axios.get(url);\n        setMovieDetails(response.data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchMovieDetails();\n  }, [movieId]);\n\n  if (!movieDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n   <>\n      \n        <button type=\"button\" onClick={() => navigate('/')}>\n          Go back\n      </button>\n      <MovieDetailStyle.MovieDetailsContainer>\n        <MovieDetailStyle.MovieImage src={`https://image.tmdb.org/t/p/w500/${movieDetails.poster_path}`} alt={movieDetails.title} />\n      <MovieDetailStyle.MovieInfo>\n          <MovieDetailStyle.MovieTitle>{movieDetails.title}</MovieDetailStyle.MovieTitle>\n          <p>User Score: {movieDetails.vote_average}%</p>\n          <h2>Overview</h2>\n          <p>{movieDetails.overview}</p>\n          <h2>Genres</h2>\n          <ul>\n            {movieDetails.genres.map((genre) => (\n              <li key={genre.id}>{genre.name}</li>\n            ))}\n          </ul>\n        </MovieDetailStyle.MovieInfo>\n         </MovieDetailStyle.MovieDetailsContainer>\n       <MovieDetailStyle.MovieAdition>\n          <MovieDetailStyle.StyleSubtitle>Additional information</MovieDetailStyle.StyleSubtitle>\n          <MovieDetailStyle.StyledLink to=\"cast\">Cast</MovieDetailStyle.StyledLink>\n          <MovieDetailStyle.StyledLink to=\"reviews\">Reviews</MovieDetailStyle.StyledLink>\n       </MovieDetailStyle.MovieAdition>\n        <Outlet/>\n     \n   </>\n  );\n};\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  movieId: PropTypes.string,\n};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["MovieDetailsContainer","styled","MovieImage","MovieInfo","MovieTitle","MovieAdition","StyleSubtitle","MovieDetailStyle","StyledLink","Link","movieId","useParams","useState","movieDetails","setMovieDetails","navigate","useNavigate","useEffect","fetchMovieDetails","url","axios","response","data","console","log","type","onClick","src","poster_path","alt","title","vote_average","overview","genres","map","genre","name","id","to","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}